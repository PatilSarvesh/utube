// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using user_profile_service.Data;

#nullable disable

namespace user_profile_service.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240409072436_addedUserProfileTable")]
    partial class addedUserProfileTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("user_profile_service.Models.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("Subscribers")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<List<string>>("Subscriptions")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("user_profile_service.Models.VideoInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserProfileId")
                        .HasColumnType("text");

                    b.Property<string>("UserProfileId1")
                        .HasColumnType("text");

                    b.Property<string>("UserProfileId2")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("UserProfileId1");

                    b.HasIndex("UserProfileId2");

                    b.ToTable("VideoInfo");
                });

            modelBuilder.Entity("user_profile_service.Models.VideoInfo", b =>
                {
                    b.HasOne("user_profile_service.Models.UserProfile", null)
                        .WithMany("LikedVideos")
                        .HasForeignKey("UserProfileId");

                    b.HasOne("user_profile_service.Models.UserProfile", null)
                        .WithMany("MyVideos")
                        .HasForeignKey("UserProfileId1");

                    b.HasOne("user_profile_service.Models.UserProfile", null)
                        .WithMany("WatchLater")
                        .HasForeignKey("UserProfileId2");
                });

            modelBuilder.Entity("user_profile_service.Models.UserProfile", b =>
                {
                    b.Navigation("LikedVideos");

                    b.Navigation("MyVideos");

                    b.Navigation("WatchLater");
                });
#pragma warning restore 612, 618
        }
    }
}
